{"version":3,"sources":["styling/theme.js","styling/global.js","components/Container/Container.styled.js","components/Container/Container.tsx","components/Drawer/demoExamples.ts","components/Drawer/Drawer.styled.js","components/Drawer/Demos.tsx","components/Drawer/Drawer.tsx","components/Footer/Footer.styled.js","components/Footer/Footer.tsx","components/Header/Header.styled.js","components/Header/Header.tsx","components/Links/Links.styled.js","components/Links/Links.tsx","components/Main/Main.styled.js","components/Main/Main.tsx","useClickOut.tsx","App.tsx","serviceWorker.ts","index.tsx","data/siteconfig.js"],"names":["theme","textLight","textDark","textDarkLink","textAccent","bodyDark","bodyMid","bodyLight","bodyAccent","screenWidth","medium","large","GlobalStyles","createGlobalStyle","StyledContainer","styled","main","Container","props","children","WorkExample","title","repoLink","demoLink","_demoInfo","this","devSite","audioPlayer","calendar","StyledDrawer","div","open","StyledDemo","Demos","demoArr","map","i","index","undefined","data-testid","className","key","href","rel","target","Drawer","onClick","setOpen","tabIndex","StyledFooter","section","Footer","copyright","StyledHeader","header","Header","StyledLinkContainer","StyledLink","button","Links","arr","links","item","url","label","StyledMain","Main","App","ref","handler","useState","node","useRef","useEffect","listener","event","current","contains","document","addEventListener","removeEventListener","style","width","height","display","padding","margin","disabled","id","userLinks","minHeight","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","siteTitle","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","siteDescription","email","twitter","github","themeColor","backgroundColor"],"mappings":"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","file":"static/js/main.cacaa2ed.chunk.js","sourcesContent":["export const theme = {\r\n  textLight: '#f5f7fa',\r\n  textDark: '#191414',\r\n  textDarkLink: '#101010',\r\n  textAccent: '#6991c7',\r\n\r\n  bodyDark: '#101010',\r\n  bodyMid: '#191414',\r\n  bodyLight: '#f5f7fa',\r\n  bodyAccent: '#6991c7',\r\n\r\n  screenWidth: {\r\n    medium: '(min-width: 424px)',\r\n    large: '(min-width: 699px)',\r\n  },\r\n}\r\n","import { createGlobalStyle } from 'styled-components'\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n@import url('href=\"https://fonts.googleapis.com/css?family=Lato:700|Montserrat:500,700&display=swap\"');\r\n    \r\n    * {\r\n        padding: 0;\r\n        margin: 0;\r\n    }\r\n    \r\n    html, body {\r\n        font-family: 'Lato', sans-serif;\r\n    }\r\n    *, *::after, *::before {\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n        overflow-x: hidden;\r\n        align-items: center;\r\n        color: ${({ theme }) => theme.textDark};\r\n        display: flex;\r\n        height: 100vh;\r\n        justify-content: center;\r\n        text-rendering: optimizeLegibility;\r\n        line-height: 1.5;\r\n    }\r\n    \r\n    h1, h2, h3, h4, h5, h6 {\r\n        font-family: 'Montserrat', sans-serif;\r\n        font-weight: 700;\r\n        line-height: 1;\r\n    }\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledContainer = styled.main`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  background-color: ${({ theme }) => theme.bodyLight};\r\n`\r\n","import React from 'react'\r\nimport { StyledContainer } from './Container.styled'\r\n\r\nexport default function Container(\r\n  props: JSX.ElementChildrenAttribute,\r\n): JSX.Element {\r\n  return <StyledContainer>{props.children}</StyledContainer>\r\n}\r\n","interface IData {\r\n  title: string\r\n  repoLink: string\r\n  demoLink?: string | undefined\r\n}\r\n\r\nclass WorkExample {\r\n  _demoInfo: IData\r\n\r\n  constructor(title: string, repoLink: string, demoLink?: string) {\r\n    this._demoInfo = {\r\n      title,\r\n      repoLink,\r\n      demoLink,\r\n    }\r\n  }\r\n\r\n  get exampleData() {\r\n    return this._demoInfo\r\n  }\r\n}\r\n\r\nexport const devSite = new WorkExample(\r\n  'this site',\r\n  'https://github.com/ArdenJ/site',\r\n  'https://ardenj.co',\r\n)\r\n\r\nexport const audioPlayer = new WorkExample(\r\n  'ID3 audio player',\r\n  'https://github.com/ArdenJ/audioplayer',\r\n  'https://w9c0x.csb.app/',\r\n)\r\n\r\nexport const calendar = new WorkExample(\r\n  'React/Apollo calendar',\r\n  'https://github.com/ArdenJ/calendar',\r\n)\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledDrawer = styled.div`\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  top: 0;\r\n  right: 0;\r\n  transform: ${({ open }) => (open ? 'translateX(0%)' : 'translateX(100%)')};\r\n  background: ${({ theme }) => theme.bodyDark};\r\n  color: ${({ theme }) => theme.textLight};\r\n  height: 100vh;\r\n  width: 100vw;\r\n  transition-duration: 0.3s;\r\n  grid-template-areas:\r\n    'controls'\r\n    'body'\r\n    'links';\r\n\r\n  @media screen and (min-width: 424px) {\r\n    width: 60vw;\r\n  }\r\n\r\n  @media ${({ theme }) => theme.screenWidth.large} {\r\n    width: 30vw;\r\n  }\r\n\r\n  .drawerButton {\r\n    grid-area: controls;\r\n    background: transparent;\r\n    border: none;\r\n    font-weight: 700;\r\n    font-size: 2.6rem;\r\n    padding: 0 0.8rem;\r\n    margin: 1rem;\r\n    cursor: pointer;\r\n    color: ${({ theme }) => theme.textLight};\r\n    transition-duration: 0.3s;\r\n\r\n    &:hover {\r\n      transform: rotate(180deg);\r\n      transition-duration: 0.3s;\r\n    }\r\n  }\r\n\r\n  .demos {\r\n    grid-area: body;\r\n    padding: 2rem 2.2rem;\r\n  }\r\n`\r\n\r\nexport const StyledDemo = styled.div`\r\n  padding: 0.5rem 0;\r\n  border-top: 2px solid white;\r\n  width: 80%;\r\n  transition-delay: 0.1s;\r\n  transition-duration: 0.2s;\r\n\r\n  &:hover {\r\n    transform: translateX(-0.5rem);\r\n    transition-duration: 0.3s;\r\n  }\r\n\r\n  h1 {\r\n    padding-bottom: 0.3rem;\r\n  }\r\n\r\n  li {\r\n    list-style: none;\r\n    font-size: 1rem;\r\n    padding: 0 0 0.1rem;\r\n    font-weight: 700;\r\n  }\r\n\r\n  a {\r\n    color: #fff;\r\n    text-decoration: none;\r\n    transition-delay: 0.1s;\r\n    transition-duration: 0.2s;\r\n\r\n    &:hover {\r\n      color: ${({ theme }) => theme.bodyAccent};\r\n      transition-duration: 0.3s;\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\n\r\nimport { devSite, audioPlayer, calendar } from './demoExamples'\r\n\r\nimport { StyledDemo } from './Drawer.styled'\r\n\r\nconst Demos: React.FC = props => {\r\n  const arr = [devSite, audioPlayer, calendar]\r\n\r\n  // eslint-disable-next-line no-undef\r\n  const demoArr: JSX.Element[] = arr.map((i, index: number) => {\r\n    const {\r\n      _demoInfo: { title, repoLink, demoLink },\r\n    } = i\r\n\r\n    const DemoItem = () => {\r\n      if (demoLink !== undefined) {\r\n        return (\r\n          <StyledDemo data-testid=\"demo\">\r\n            <h1 className=\"demoTitle\">{title}</h1>\r\n            <li key={`Demo${title}_${index}`}>\r\n              <a href={`${demoLink}`} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                demo\r\n              </a>\r\n            </li>\r\n            <li key={`Repo${title}_${index}`}>\r\n              <a href={`${repoLink}`} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                repo\r\n              </a>\r\n            </li>\r\n          </StyledDemo>\r\n        )\r\n      } else {\r\n        //   TODO: this not dry.\r\n        return (\r\n          <StyledDemo>\r\n            <h1 className=\"demoTitle\">{title}</h1>\r\n            <li key={`Repo${title}_${index}`}>\r\n              <a href={`${repoLink}`} rel=\"noopener noreferrer\" target=\"_blank\">\r\n                repo\r\n              </a>\r\n            </li>\r\n          </StyledDemo>\r\n        )\r\n      }\r\n    }\r\n    return <DemoItem key={`project_${index}`} />\r\n  })\r\n\r\n  return <>{demoArr}</>\r\n}\r\n\r\nexport default Demos\r\n","import React from 'react'\r\n\r\nimport Demos from './Demos'\r\n\r\nimport { StyledDrawer } from './Drawer.styled'\r\n\r\nexport default function Drawer(props: {\r\n  open: boolean\r\n  setOpen: CallableFunction\r\n  id: string\r\n}): JSX.Element {\r\n  return (\r\n    <StyledDrawer {...props}>\r\n      <button\r\n        className=\"drawerButton\"\r\n        onClick={() => props.setOpen(!props.open)}\r\n        tabIndex={props.open ? 0 : -1}\r\n      >\r\n        <span>&times;</span>\r\n      </button>\r\n      <div className=\"demos\">\r\n        <Demos />\r\n      </div>\r\n    </StyledDrawer>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledFooter = styled.section`\r\n  height: 100%;\r\n  width: 100%;\r\n  background-color: ${({ theme }) => theme.bodyDark};\r\n  color: ${({ theme }) => theme.textLight};\r\n  font-size: 1.1rem;\r\n  font-weight: 700;\r\n\r\n  .wrapper {\r\n    display: grid;\r\n    padding: 1.6rem 2rem;\r\n    grid-template-areas:\r\n      'about'\r\n      'copyright';\r\n    max-width: 100%;\r\n\r\n    & :first-child {\r\n      margin-bottom: 1rem;\r\n    }\r\n  }\r\n\r\n  .copyright {\r\n    font-weight: bold;\r\n  }\r\n\r\n  @media ${({ theme }) => theme.screenWidth.medium} {\r\n    .wrapper {\r\n      width: 80%;\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\n\r\nimport { copyright } from '../../data/siteconfig'\r\n\r\nimport { StyledFooter } from './Footer.styled'\r\n\r\nexport default function Footer(\r\n  props: JSX.ElementChildrenAttribute,\r\n): JSX.Element {\r\n  return (\r\n    <StyledFooter>\r\n      <div className=\"wrapper\">\r\n        <article className=\"about\">{props.children}</article>\r\n        <footer className=\"copyright\">{copyright}</footer>\r\n      </div>\r\n    </StyledFooter>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledHeader = styled.header`\r\n  grid-area: header;\r\n  max-width: 80vw;\r\n  font-weight: 900;\r\n  margin: auto;\r\n  line-height: 1;\r\n\r\n  h1 {\r\n    font-size: 2.6rem;\r\n  }\r\n\r\n  p {\r\n    line-height: 2rem;\r\n    font-size: 1.8rem;\r\n    width: 80%;\r\n    margin: 0.4rem 0 0.8rem 0;\r\n  }\r\n\r\n  .demoButton {\r\n    background: ${({ theme }) => theme.bodyDark};\r\n    border: none;\r\n    color: #f5f7fa;\r\n    text-decoration: none;\r\n    font-weight: 700;\r\n    font-size: 1.2rem;\r\n    padding: 0.8rem 1.2rem;\r\n    cursor: pointer;\r\n  }\r\n\r\n  @media ${({ theme }) => theme.screenWidth.medium} {\r\n    width: 60vw;\r\n\r\n    p {\r\n      width: 80%;\r\n    }\r\n  }\r\n\r\n  @media ${({ theme }) => theme.screenWidth.large} {\r\n    width: 60vw;\r\n\r\n    h1 {\r\n      font-size: 3.8rem;\r\n    }\r\n\r\n    p {\r\n      width: 70%;\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\r\nimport { StyledHeader } from './Header.styled'\r\n\r\nexport default function Header(\r\n  props: JSX.ElementChildrenAttribute,\r\n): JSX.Element {\r\n  return (\r\n    <StyledHeader data-testid=\"title\">\r\n      <>{props.children}</>\r\n    </StyledHeader>\r\n  )\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledLinkContainer = styled.div`\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n  justify-content: flex-start;\r\n  align-items: flex-start;\r\n  background: transparent;\r\n  width: 60%;\r\n\r\n  @media ${({ theme }) => theme.screenWidth.medium} {\r\n    width: 70%;\r\n  }\r\n\r\n  @media ${({ theme }) => theme.screenWidth.large} {\r\n    width: 100%;\r\n  }\r\n\r\n  a {\r\n    text-decoration: none;\r\n    color: ${({ theme }) => theme.textDark};\r\n    cursor: pointer;\r\n  }\r\n`\r\n\r\nexport const StyledLink = styled.button`\r\n  background-color: transparent;\r\n  text-decoration: none;\r\n  font-weight: 700;\r\n  font-size: 1.2rem;\r\n  padding: 0.8rem 1.2rem;\r\n  margin: 0 0.6rem 0.4rem 0;\r\n  border: 4px solid ${({ theme }) => theme.textDark};\r\n  color: ${({ theme }) => theme.textDark};\r\n`\r\n","import React from 'react'\r\n\r\nimport { StyledLinkContainer, StyledLink } from './Links.styled'\r\n\r\ninterface ILink {\r\n  url: string\r\n  label: string\r\n}\r\n\r\n// TODO: Remove any\r\nexport default function Links({ links }: any): JSX.Element {\r\n  const arr = links.map((item: ILink, index: number) => {\r\n    return (\r\n      <StyledLink key={`link_${index}`} data-testid=\"button\">\r\n        <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {item.label}\r\n        </a>\r\n      </StyledLink>\r\n    )\r\n  })\r\n\r\n  return <StyledLinkContainer>{arr}</StyledLinkContainer>\r\n}\r\n","import styled from 'styled-components'\r\n\r\nexport const StyledMain = styled.main`\r\n  display: grid;\r\n  grid-template-areas: 'header section';\r\n  overflow-x: hidden;\r\n  align-items: center;\r\n  background-color: ${({ theme }) => theme.bodyLight};\r\n  background-image: linear-gradient(40deg, #f5f7fa, #c3cfe2);\r\n  color: ${({ theme }) => theme.textDark};\r\n  height: 100vh;\r\n  width: 100vw;\r\n  justify-content: center;\r\n  text-rendering: optimizeLegibility;\r\n`\r\n","import React from 'react'\r\n\r\nimport { StyledMain } from './Main.styled'\r\n\r\nexport default function Main(props: JSX.ElementChildrenAttribute): JSX.Element {\r\n  return <StyledMain>{props.children}</StyledMain>\r\n}\r\n","import { useEffect } from 'react'\r\n\r\nexport const useClickOut = (ref: any, handler: CallableFunction) => {\r\n  useEffect(() => {\r\n    const listener = (event: any) => {\r\n      if (!ref.current || ref.current.contains(event.target)) {\r\n        return\r\n      }\r\n      handler(event)\r\n    }\r\n    document.addEventListener('mousedown', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('mousedown', listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import React, { useState, useRef } from 'react'\r\nimport FocusLock from 'react-focus-lock'\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nimport { theme } from './styling/theme'\r\nimport { GlobalStyles } from './styling/global'\r\n\r\nimport {\r\n  Container,\r\n  Main,\r\n  Header,\r\n  Footer,\r\n  Links,\r\n  Drawer,\r\n} from './components/index'\r\n\r\nimport { useClickOut } from './useClickOut'\r\n\r\nimport { userLinks } from './data/siteconfig'\r\n\r\nconst App: React.FC = () => {\r\n  const [open, setOpen] = useState<boolean>(false)\r\n  const node = useRef()\r\n  const menuId = 'thisIsMenu'\r\n\r\n  useClickOut(node, () => setOpen(false))\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n      <div\r\n        style={{\r\n          width: '100vw',\r\n          height: '100vh',\r\n          display: 'grid',\r\n          padding: 0,\r\n          margin: 0,\r\n        }}\r\n        data-testid=\"app\"\r\n      >\r\n        {/* TODO: Focus lock  */}\r\n        <FocusLock disabled={!open}>\r\n          <Drawer open={open} setOpen={setOpen} id={menuId} />\r\n        </FocusLock>\r\n        <Container>\r\n          <Main>\r\n            <Header>\r\n              <h1>I&apos;m Arden*</h1>\r\n              <p>I like using javascript and graphql to make things</p>\r\n              <Links links={userLinks} />\r\n              <div style={{ width: '100%' }}>\r\n                <button className=\"demoButton\" onClick={() => setOpen(!open)}>\r\n                  <span>demos</span>\r\n                </button>\r\n              </div>\r\n            </Header>\r\n          </Main>\r\n          <div className=\"footer\" style={{ minHeight: '26vh' }}>\r\n            <Footer>\r\n              <>\r\n                <p>\r\n                  * At present, I have a little over a year’s experience working\r\n                  mainly on my own projects, a couple of which you can find\r\n                  links to above or via my Github (starred repos). While I am\r\n                  very aware of my lack of experience, I nevertheless feel\r\n                  confident that I can contribute meaningfully as part of a\r\n                  larger team and believe looking for my first role as a\r\n                  developer to be the next step in continuing my development.\r\n                </p>\r\n                <p>\r\n                  I enjoy working with new technologies and have experience\r\n                  using: JavaScript (ES6+) and more recently TypeScript, React\r\n                  (16+), CSS, CSS in JS, HTML, GraphQL, and Node.\r\n                </p>\r\n                <p>\r\n                  I am also confident using Git, linting and formatting my code,\r\n                  and writing tests using Jest and Testing-Library.\r\n                </p>\r\n              </>\r\n            </Footer>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","const config = {\r\n  siteTitle: 'Arden', // Site title.\r\n  siteTitleShort: 'Arden', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\r\n  siteTitleAlt: 'Arden, London JavaScript developer', // Alternative site title for SEO.\r\n  siteLogo: '/logos/logo-1024.png', // Logo used for SEO and manifest.\r\n  siteUrl: '', // Domain of your website without pathPrefix.\r\n  siteDescription:\r\n    'London-based JavaScript developer with an interest in working with data layers', // Website description used for RSS feeds/meta description tag.\r\n  email: 'j.gaddas@outlook.com', // Email used for RSS feed's author segment\r\n  twitter: '@_ardenj', // Optionally renders \"Follow Me\" in the UserInfo segment.\r\n  github: 'ArdenJ', // User location to display in the author segment.\r\n\r\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\r\n  userLinks: [\r\n    {\r\n      label: 'twitter',\r\n      url: 'https://www.twitter.com/_ardenj',\r\n    },\r\n    {\r\n      label: 'email',\r\n      url: 'mailto:j.gaddas@outlook.com',\r\n    },\r\n    {\r\n      label: 'github',\r\n      url: 'https://www.github.com/ArdenJ',\r\n    },\r\n  ],\r\n  copyright: 'Arden 🚀', // Copyright string for the footer of the website and RSS feed.\r\n  themeColor: '#191414', // Used for setting manifest and progress theme colors.\r\n  backgroundColor: '#191414', // Used for setting manifest background color.\r\n}\r\n\r\nmodule.exports = config\r\n"],"sourceRoot":""}